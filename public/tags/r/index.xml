<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Omaha R Users</title>
    <link>/tags/r/</link>
    <description>Recent content in R on Omaha R Users</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 02 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ridiculously Parallel R</title>
      <link>/post/ridiculously-parallel-r/</link>
      <pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/ridiculously-parallel-r/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>NCAA College Bowl Pick&#39;em Predictions</title>
      <link>/post/ncaa-college-bowl-pick-em-predictions/</link>
      <pubDate>Wed, 24 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/ncaa-college-bowl-pick-em-predictions/</guid>
      <description>*Please read the Terms of Use if you are going to use the data
This is the code from my presentation last week at the Omaha R User Group Meeting. A fun competition every year is to pick the winners for each college football bowl. I wanted to build a data-driven model to help me make this year’s picks. This post will walk through the process of obtaining data for predictions, building a couple predictive models, and then compare the results of the models.</description>
    </item>
    
    <item>
      <title>fbplot</title>
      <link>/post/fbplot/</link>
      <pubDate>Thu, 02 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/fbplot/</guid>
      <description>Visualizing Data Using the Functional Boxplotlibrary(fda)data(growth)girls=growth$hgtfage=growth$ageThe Berkley growth data found in the fda package is an excellent example of functional data. Here we consider each growth curve to be one observation. With data of this type there are a couple of plotting avenues we might take: over plotting or sequential boxplots.
These methods aren’t inherently “incorrect”, but limitations to their interpretability exist especially when encountered with larger data sets.</description>
    </item>
    
    <item>
      <title>Submitting a Post with Blogdown</title>
      <link>/post/submitting-a-post-with-blogdown/</link>
      <pubDate>Mon, 11 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/submitting-a-post-with-blogdown/</guid>
      <description>Set upYou will first need to set up an account on github and install git.
Next, make a copy of the repository into your desired workspace. I like to keep all of my version controlled projects under one directory. Open up a command terminal of your choosing and use the following:
cd #[working directory]git clone https://github.com/omahar/omahar.gitgit branch #[new branch]git checkout #[new branch]git push --set-upstream origin #[new branch]After the initial set up you can open the R Project in Rstudio and use the IDE to handle most of the work you will need to do in git.</description>
    </item>
    
  </channel>
</rss>